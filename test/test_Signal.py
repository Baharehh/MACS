#!/usr/bin/env python
# Time-stamp: <2019-12-18 14:27:57 taoliu>

"""Module Description: Test functions for Signal.pyx

This code is free software; you can redistribute it and/or modify it
under the terms of the BSD License (see the file LICENSE included with
the distribution).
"""

import unittest

from math import log10
import numpy as np
from MACS2.Signal import maxima, savitzky_golay, savitzky_golay_order2

# ------------------------------------
# Main function
# ------------------------------------

class Test_maxima(unittest.TestCase):

    def setUp(self):
        data = [0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,0.0,4.0,4.0,4.0,4.0,
                4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,
                5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,5.0,
                5.0,5.0,5.0,5.0,5.0,5.0,5.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,
                6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,7.0,7.0,7.0,
                7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,
                7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,6.0,6.0,6.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,
                7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,
                7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,8.0,8.0,8.0,8.0,
                8.0,8.0,8.0,8.0,8.0,8.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,7.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,
                6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,6.0,4.0,4.0,4.0,4.0,4.0,
                4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,
                4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,4.0,
                4.0,4.0,4.0,4.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,
                3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,
                3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,
                3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,
                3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,3.0,
                3.0,3.0,3.0,3.0,3.0,3.0]
        # 0 deriv
        smoothed = [  1.17961196e-16, 8.23814716e-02, 1.64737006e-01, 2.47040668e-01
                    , 3.29266519e-01, 4.11388624e-01, 4.93381045e-01, 5.75217845e-01
                    , 6.56873089e-01, 7.38320839e-01, 8.19535159e-01, 9.06537070e-01
                    , 9.93489886e-01, 1.08036952e+00, 1.16715190e+00, 1.25381293e+00
                    , 1.34032853e+00, 1.42667461e+00, 1.51282709e+00, 1.59876189e+00
                    , 1.68445493e+00, 1.76988211e+00, 1.85501936e+00, 1.93984258e+00
                    , 2.02432771e+00, 2.10845064e+00, 2.19218731e+00, 2.27551362e+00
                    , 2.35840549e+00, 2.44083883e+00, 2.52278957e+00, 2.61004621e+00
                    , 2.69653958e+00, 2.78224743e+00, 2.86133494e+00, 2.93982498e+00
                    , 3.01769347e+00, 3.09491631e+00, 3.17146943e+00, 3.24732875e+00
                    , 3.32247018e+00, 3.39686962e+00, 3.47050301e+00, 3.54334626e+00
                    , 3.61537528e+00, 3.68656599e+00, 3.75689430e+00, 3.82633613e+00
                    , 3.89486740e+00, 3.96851098e+00, 4.04143204e+00, 4.11360834e+00
                    , 4.18501766e+00, 4.25563776e+00, 4.32544641e+00, 4.39442138e+00
                    , 4.46254045e+00, 4.52978136e+00, 4.59612191e+00, 4.66153984e+00
                    , 4.72601294e+00, 4.78951898e+00, 4.85203571e+00, 4.91354091e+00
                    , 4.97401234e+00, 5.03342779e+00, 5.09176500e+00, 5.14900176e+00
                    , 5.20511583e+00, 5.26008498e+00, 5.31388698e+00, 5.36649959e+00
                    , 5.41790059e+00, 5.46806774e+00, 5.51697882e+00, 5.56461158e+00
                    , 5.61094381e+00, 5.65595326e+00, 5.69961771e+00, 5.74191493e+00
                    , 5.78282267e+00, 5.82231872e+00, 5.86038084e+00, 5.89698680e+00
                    , 5.93211437e+00, 5.96574131e+00, 5.99203280e+00, 6.01701170e+00
                    , 6.04065394e+00, 6.06898238e+00, 6.09616220e+00, 6.12217116e+00
                    , 6.14698703e+00, 6.17058759e+00, 6.19295059e+00, 6.21405381e+00
                    , 6.23968761e+00, 6.26378467e+00, 6.28632459e+00, 6.30728701e+00
                    , 6.32665154e+00, 6.34439781e+00, 6.36050543e+00, 6.37495403e+00
                    , 6.39353583e+00, 6.41018535e+00, 6.42488405e+00, 6.43761342e+00
                    , 6.47254275e+00, 6.50641054e+00, 6.53920565e+00, 6.57091698e+00
                    , 6.60153342e+00, 6.63104383e+00, 6.65943712e+00, 6.68670216e+00
                    , 6.71282783e+00, 6.73780303e+00, 6.76161664e+00, 6.78425753e+00
                    , 6.80571460e+00, 6.82597673e+00, 6.84503280e+00, 6.86287169e+00
                    , 6.87948230e+00, 6.89485351e+00, 6.90897419e+00, 6.92183324e+00
                    , 6.93341954e+00, 6.94372197e+00, 6.95272942e+00, 6.96043077e+00
                    , 6.96681491e+00, 6.98349592e+00, 6.99837247e+00, 7.01143716e+00
                    , 7.02268258e+00, 7.03210131e+00, 7.03968594e+00, 7.04542907e+00
                    , 7.04932328e+00, 7.05136117e+00, 7.05153531e+00, 7.04983831e+00
                    , 7.04626275e+00, 7.04080122e+00, 7.03344631e+00, 7.04837845e+00
                    , 7.06234722e+00, 7.07535262e+00, 7.08739467e+00, 7.09847335e+00
                    , 7.10858866e+00, 7.11774062e+00, 7.12592921e+00, 7.13315443e+00
                    , 7.13941629e+00, 7.14471479e+00, 7.14904993e+00, 7.15242170e+00
                    , 7.15483011e+00, 7.15627516e+00, 7.15675684e+00, 7.15627516e+00
                    , 7.15483011e+00, 7.15242170e+00, 7.15509689e+00, 7.15704492e+00
                    , 7.15826765e+00, 7.15876693e+00, 7.15854462e+00, 7.15760256e+00
                    , 7.15594261e+00, 7.15356662e+00, 7.15047645e+00, 7.14667394e+00
                    , 7.14216095e+00, 7.13693934e+00, 7.13101095e+00, 7.12437763e+00
                    , 7.11704125e+00, 7.10900365e+00, 7.10026668e+00, 7.09083221e+00
                    , 7.08070207e+00, 7.06987813e+00, 7.05836223e+00, 7.04615623e+00
                    , 7.03326198e+00, 7.01968133e+00, 7.01122874e+00, 7.00186096e+00
                    , 6.99158169e+00, 6.98039463e+00, 6.96830349e+00, 6.95531198e+00
                    , 6.94142380e+00, 6.92664265e+00, 6.91097225e+00, 6.89441629e+00
                    , 6.87697848e+00, 6.85866254e+00, 6.83947215e+00, 6.81941103e+00
                    , 6.79848289e+00, 6.77669142e+00, 6.76008730e+00, 6.74286347e+00
                    , 6.72502550e+00, 6.70657894e+00, 6.68752935e+00, 6.66788230e+00
                    , 6.64764333e+00, 6.62681800e+00, 6.60541188e+00, 6.58343052e+00
                    , 6.56087948e+00, 6.53776431e+00, 6.51409058e+00, 6.48986384e+00
                    , 6.46508965e+00, 6.43977357e+00, 6.41392116e+00, 6.38753797e+00
                    , 6.36062956e+00, 6.33320149e+00, 6.30525932e+00, 6.27680860e+00
                    , 6.24785490e+00, 6.21840376e+00, 6.18846076e+00, 6.15803144e+00
                    , 6.12712137e+00, 6.09573610e+00, 6.06388119e+00, 6.03156220e+00
                    , 5.99878468e+00, 5.96555420e+00, 5.93187631e+00, 5.89775657e+00
                    , 5.86320053e+00, 5.82821377e+00, 5.79280182e+00, 5.75697026e+00
                    , 5.72677159e+00, 5.69640063e+00, 5.66586479e+00, 5.63517147e+00
                    , 5.60432810e+00, 5.57334207e+00, 5.54222079e+00, 5.51097169e+00
                    , 5.47960217e+00, 5.44811963e+00, 5.41653150e+00, 5.38484518e+00
                    , 5.35306808e+00, 5.32120761e+00, 5.28927119e+00, 5.25726622e+00
                    , 5.22520011e+00, 5.19308027e+00, 5.16091412e+00, 5.12870907e+00
                    , 5.09647251e+00, 5.06421188e+00, 5.03193457e+00, 4.99964800e+00
                    , 4.96735958e+00, 4.93507671e+00, 4.90280682e+00, 4.87055730e+00
                    , 4.83833557e+00, 4.80614904e+00, 4.77400512e+00, 4.74191122e+00
                    , 4.70987475e+00, 4.67790313e+00, 4.64600376e+00, 4.61418405e+00
                    , 4.58245141e+00, 4.55081325e+00, 4.51927700e+00, 4.48785004e+00
                    , 4.45049284e+00, 4.41302356e+00, 4.37544776e+00, 4.34381794e+00
                    , 4.31232892e+00, 4.28098811e+00, 4.24980293e+00, 4.21878077e+00
                    , 4.18792906e+00, 4.15725519e+00, 4.12676659e+00, 4.09647066e+00
                    , 4.06637482e+00, 4.03648647e+00, 4.00681302e+00, 3.97736188e+00
                    , 3.94814048e+00, 3.91915620e+00, 3.89041648e+00, 3.86192871e+00
                    , 3.83370031e+00, 3.80573868e+00, 3.77805125e+00, 3.75064541e+00
                    , 3.72352858e+00, 3.69670817e+00, 3.67019159e+00, 3.64398625e+00
                    , 3.61809956e+00, 3.59253894e+00, 3.56731178e+00, 3.54242551e+00
                    , 3.51788753e+00, 3.49370525e+00, 3.46988609e+00, 3.44643745e+00
                    , 3.42336675e+00, 3.40068139e+00, 3.37838879e+00, 3.35649636e+00
                    , 3.33501150e+00, 3.31394163e+00, 3.29329416e+00, 3.27307649e+00
                    , 3.25329605e+00, 3.23396023e+00, 3.21507645e+00, 3.19665213e+00
                    , 3.17869466e+00, 3.16121147e+00, 3.14420995e+00, 3.12769753e+00
                    , 3.11168162e+00, 3.09616961e+00, 3.08116893e+00, 3.07273394e+00
                    , 3.06506131e+00, 3.05816029e+00, 3.05204015e+00, 3.04671016e+00
                    , 3.04217957e+00, 3.03845766e+00, 3.03555367e+00, 3.03347688e+00
                    , 3.03223655e+00, 3.02579498e+00, 3.01997219e+00, 3.01477559e+00
                    , 3.01021258e+00, 3.00629058e+00, 3.00301700e+00, 3.00039924e+00
                    , 2.99844472e+00, 2.99111390e+00, 2.98422492e+00, 2.97778336e+00
                    , 2.97179476e+00, 2.96626468e+00, 2.96119868e+00, 2.95660233e+00
                    , 2.95248117e+00, 2.94884077e+00, 2.94568668e+00, 2.94302446e+00
                    , 2.94085967e+00, 2.93919787e+00, 2.93804461e+00, 2.93740546e+00
                    , 2.93728596e+00, 2.93769169e+00, 2.93862819e+00, 2.94010102e+00
                    , 2.94211575e+00, 2.94467793e+00, 2.94779311e+00, 2.95146686e+00
                    , 2.95570473e+00, 2.96051229e+00, 2.96589508e+00, 2.97185867e+00
                    , 2.97840862e+00, 2.98555047e+00, 2.98119589e+00, 2.97697191e+00
                    , 2.97288039e+00, 2.96892319e+00, 2.96510216e+00, 2.96141915e+00
                    , 2.95787601e+00, 2.95447459e+00, 2.95121676e+00, 2.94810435e+00
                    , 2.94513923e+00, 2.94232324e+00, 2.93965825e+00, 2.93714609e+00
                    , 2.93478863e+00, 2.93258771e+00, 2.93054520e+00, 2.92866293e+00
                    , 2.92694278e+00, 2.92538657e+00, 2.92399618e+00, 2.92277345e+00
                    , 2.92172023e+00, 2.92083839e+00, 2.92012976e+00, 2.91959620e+00
                    , 2.91923957e+00, 2.91906172e+00, 2.91906450e+00, 2.91924976e+00
                    , 2.91961936e+00, 2.92017515e+00, 2.92091897e+00, 2.92185270e+00
                    , 2.92297816e+00, 2.92429723e+00, 2.92581175e+00, 2.92752357e+00
                    , 2.92943455e+00, 2.93154654e+00, 2.93386139e+00, 2.93638096e+00
                    , 2.93910709e+00, 2.94204165e+00, 2.94518647e+00, 2.94854342e+00
                    , 2.95211435e+00, 2.95008851e+00, 2.94851285e+00, 2.94738739e+00
                    , 2.94671211e+00, 2.94648701e+00]
        # 1-deriv, used to find maximum point with smoothing function
        smoothed1 = [ 6.61562562e-02, 6.61510691e-02, 6.61355078e-02, 6.61095723e-02
                    , 6.60732626e-02, 6.60265787e-02, 6.59695206e-02, 6.59020883e-02
                    , 6.58242818e-02, 6.57361012e-02, 6.56375463e-02, 6.56227260e-02
                    , 6.55982725e-02, 6.55641859e-02, 6.55204661e-02, 6.54671131e-02
                    , 6.54041269e-02, 6.53315075e-02, 6.52492549e-02, 6.51573692e-02
                    , 6.50558502e-02, 6.49446981e-02, 6.48239128e-02, 6.46934943e-02
                    , 6.45534427e-02, 6.44037578e-02, 6.42444398e-02, 6.40754886e-02
                    , 6.38969042e-02, 6.37086866e-02, 6.35108358e-02, 6.32099841e-02
                    , 6.29002402e-02, 6.25816042e-02, 6.23474437e-02, 6.21036501e-02
                    , 6.18502233e-02, 6.15871633e-02, 6.13144701e-02, 6.10321437e-02
                    , 6.07401842e-02, 6.04385914e-02, 6.01273655e-02, 5.98065064e-02
                    , 5.94760141e-02, 5.91358886e-02, 5.87861300e-02, 5.84267382e-02
                    , 5.80577131e-02, 5.77731637e-02, 5.74797221e-02, 5.71773884e-02
                    , 5.68661625e-02, 5.65460444e-02, 5.62170341e-02, 5.58791317e-02
                    , 5.55323371e-02, 5.51766503e-02, 5.48120714e-02, 5.44386003e-02
                    , 5.40562370e-02, 5.36649816e-02, 5.32648340e-02, 5.28557942e-02
                    , 5.24378623e-02, 5.20110381e-02, 5.15753219e-02, 5.11307134e-02
                    , 5.06772128e-02, 5.02148200e-02, 4.97435350e-02, 4.92633579e-02
                    , 4.87742886e-02, 4.82763271e-02, 4.77694735e-02, 4.72537277e-02
                    , 4.67290897e-02, 4.61955595e-02, 4.56531372e-02, 4.51018227e-02
                    , 4.45416161e-02, 4.39725173e-02, 4.33945263e-02, 4.28076431e-02
                    , 4.22118678e-02, 4.16072003e-02, 4.10870084e-02, 4.05571833e-02
                    , 4.00177251e-02, 3.95627424e-02, 3.90988676e-02, 3.86261006e-02
                    , 3.81444414e-02, 3.76538901e-02, 3.71544466e-02, 3.66461109e-02
                    , 3.60355153e-02, 3.54167686e-02, 3.47898706e-02, 3.41548216e-02
                    , 3.35116213e-02, 3.28602699e-02, 3.22007674e-02, 3.15331137e-02
                    , 3.07639411e-02, 2.99873583e-02, 2.92033654e-02, 2.84119623e-02
                    , 2.79895843e-02, 2.75627602e-02, 2.71314900e-02, 2.66957737e-02
                    , 2.62556113e-02, 2.58110029e-02, 2.53619483e-02, 2.49084477e-02
                    , 2.44505010e-02, 2.39881082e-02, 2.35212693e-02, 2.30499844e-02
                    , 2.25742533e-02, 2.20940762e-02, 2.16094530e-02, 2.11203837e-02
                    , 2.06268683e-02, 2.01289068e-02, 1.96264993e-02, 1.91196456e-02
                    , 1.86083459e-02, 1.80926001e-02, 1.75724082e-02, 1.70477702e-02
                    , 1.65186862e-02, 1.57984205e-02, 1.50751907e-02, 1.43489969e-02
                    , 1.36198390e-02, 1.28877171e-02, 1.21526311e-02, 1.14145811e-02
                    , 1.06735670e-02, 9.92958884e-03, 9.18264664e-03, 8.43274037e-03
                    , 7.67987006e-03, 6.92403568e-03, 6.16523725e-03, 5.77990992e-03
                    , 5.39458259e-03, 5.00925527e-03, 4.62392794e-03, 4.23860061e-03
                    , 3.85327328e-03, 3.46794595e-03, 3.08261863e-03, 2.69729130e-03
                    , 2.31196397e-03, 1.92663664e-03, 1.54130931e-03, 1.15598198e-03
                    , 7.70654656e-04, 3.85327328e-04, -2.98155597e-18, -3.85327328e-04 # 3.85327328e-04  is the maximum point smoothed1[161]
                    , -7.70654656e-04, -1.15598198e-03, -1.44720052e-03, -1.73767805e-03
                    , -2.02741456e-03, -2.31641005e-03, -2.60466454e-03, -2.89217800e-03
                    , -3.17895046e-03, -3.46498190e-03, -3.75027232e-03, -4.03482173e-03
                    , -4.31863013e-03, -4.60169752e-03, -4.88402388e-03, -5.16560924e-03
                    , -5.44645358e-03, -5.72655691e-03, -6.00591922e-03, -6.28454052e-03
                    , -6.56242080e-03, -6.83956007e-03, -7.11595833e-03, -7.39161557e-03
                    , -7.66653180e-03, -7.94070702e-03, -8.30750899e-03, -8.67282894e-03
                    , -9.03666686e-03, -9.39902275e-03, -9.75989661e-03, -1.01192884e-02
                    , -1.04771983e-02, -1.08336260e-02, -1.11885718e-02, -1.15420355e-02
                    , -1.18940172e-02, -1.22445169e-02, -1.25935345e-02, -1.29410701e-02
                    , -1.32871237e-02, -1.36316952e-02, -1.38806760e-02, -1.41274337e-02
                    , -1.43719683e-02, -1.46142799e-02, -1.48543685e-02, -1.50922340e-02
                    , -1.53278765e-02, -1.55612959e-02, -1.57924923e-02, -1.60214657e-02
                    , -1.62482160e-02, -1.64727433e-02, -1.66950475e-02, -1.69151287e-02
                    , -1.71329868e-02, -1.73486219e-02, -1.75620340e-02, -1.77732230e-02
                    , -1.79821890e-02, -1.81889319e-02, -1.83934518e-02, -1.85957487e-02
                    , -1.87958225e-02, -1.89936732e-02, -1.91893009e-02, -1.93827056e-02
                    , -1.95738873e-02, -1.97628458e-02, -1.99495814e-02, -2.01340939e-02
                    , -2.03163834e-02, -2.04964498e-02, -2.06742932e-02, -2.08499135e-02
                    , -2.10233108e-02, -2.11944851e-02, -2.13634363e-02, -2.15301645e-02
                    , -2.16005608e-02, -2.16679931e-02, -2.17324613e-02, -2.17939655e-02
                    , -2.18525056e-02, -2.19080816e-02, -2.19606936e-02, -2.20103416e-02
                    , -2.20570255e-02, -2.21007453e-02, -2.21415011e-02, -2.21792928e-02
                    , -2.22141205e-02, -2.22459841e-02, -2.22748836e-02, -2.23008191e-02
                    , -2.23237906e-02, -2.23437979e-02, -2.23608413e-02, -2.23749205e-02
                    , -2.23860357e-02, -2.23941869e-02, -2.23993740e-02, -2.24015970e-02
                    , -2.24008560e-02, -2.23971509e-02, -2.23904818e-02, -2.23808486e-02
                    , -2.23682514e-02, -2.23526901e-02, -2.23341648e-02, -2.23126753e-02
                    , -2.22882219e-02, -2.22608044e-02, -2.22304228e-02, -2.21970771e-02
                    , -2.21607675e-02, -2.21214937e-02, -2.20792559e-02, -2.20340540e-02
                    , -2.20799969e-02, -2.21237167e-02, -2.21652135e-02, -2.21103785e-02
                    , -2.20525794e-02, -2.19918162e-02, -2.19280890e-02, -2.18613978e-02
                    , -2.17917424e-02, -2.17191231e-02, -2.16435396e-02, -2.15649921e-02
                    , -2.14834806e-02, -2.13990050e-02, -2.13115653e-02, -2.12211616e-02
                    , -2.11277938e-02, -2.10314620e-02, -2.09321661e-02, -2.08299061e-02
                    , -2.07246821e-02, -2.06164941e-02, -2.05053420e-02, -2.03912258e-02
                    , -2.02741456e-02, -2.01541013e-02, -2.00310930e-02, -1.99051206e-02
                    , -1.97761841e-02, -1.96442836e-02, -1.95094190e-02, -1.93715904e-02
                    , -1.92307977e-02, -1.90870410e-02, -1.89403202e-02, -1.87906354e-02
                    , -1.86379865e-02, -1.84823735e-02, -1.83237965e-02, -1.81622554e-02
                    , -1.79977503e-02, -1.78302811e-02, -1.76598479e-02, -1.74864506e-02
                    , -1.73100892e-02, -1.71307638e-02, -1.69484743e-02, -1.67632208e-02
                    , -1.65750032e-02, -1.63838216e-02, -1.61896759e-02, -1.59925661e-02
                    , -1.57924923e-02, -1.55894545e-02, -1.53834526e-02, -1.50803778e-02
                    , -1.47735980e-02, -1.44631131e-02, -1.41489231e-02, -1.38310280e-02
                    , -1.35094279e-02, -1.31841227e-02, -1.28551125e-02, -1.25223972e-02
                    , -1.21859768e-02, -1.19399601e-02, -1.16909793e-02, -1.14390345e-02
                    , -1.11841257e-02, -1.09262528e-02, -1.06654158e-02, -1.04016148e-02
                    , -1.01348497e-02, -9.95922940e-03, -9.78138602e-03, -9.60131960e-03
                    , -9.41903013e-03, -9.23451762e-03, -9.04778207e-03, -8.85882348e-03
                    , -8.66764184e-03, -8.47423716e-03, -8.27860944e-03, -8.08075868e-03
                    , -7.88068487e-03, -7.67838803e-03, -7.47386814e-03, -7.26712521e-03
                    , -7.05815923e-03, -6.84697022e-03, -6.63355816e-03, -6.41792306e-03
                    , -6.20006491e-03, -5.97998373e-03, -5.75767950e-03, -5.53315223e-03
                    , -5.30640192e-03, -5.07742856e-03, -4.84623217e-03, -4.61281273e-03
                    , -4.37717025e-03, -4.13930472e-03, -4.08743373e-03, -4.03482173e-03
                    , -3.98146872e-03, -3.92737469e-03, -3.87253965e-03, -3.81696359e-03
                    , -3.76064652e-03, -3.70358843e-03, -3.64578934e-03, -3.58724922e-03
                    , -3.52796809e-03, -3.46794595e-03, -3.40718280e-03, -3.34567863e-03
                    , -3.28343344e-03, -3.22044725e-03, -3.15672003e-03, -3.09225181e-03
                    , -3.02704257e-03, -2.96109231e-03, -2.89440105e-03, -2.82696876e-03
                    , -2.75879547e-03, -2.68988116e-03, -2.62022583e-03, -2.54982949e-03
                    , -2.47869214e-03, -2.40681377e-03, -2.33419439e-03, -2.26083400e-03
                    , -2.18673259e-03, -2.11189016e-03, -2.03630673e-03, -1.95998227e-03
                    , -1.88291681e-03, -1.80511033e-03, -1.72656284e-03, -1.64727433e-03
                    , -1.56724481e-03, -1.48647427e-03, -1.40496272e-03, -1.32271016e-03
                    , -1.23971658e-03, -1.15598198e-03, -1.07150638e-03, -9.86289757e-04
                    , -9.00332123e-04, -7.20265698e-04, -5.40199274e-04, -3.60132849e-04
                    , -1.80066425e-04, -2.11419424e-18]
        sign = [ 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1.
                 , 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1., 1. #<- the last 1 is #162 or sign[161]
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.,-1.
                 ,-1.,-1.,-1.,-1.,-1.,-1.]
        diff = [ 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.,-2. #<- this -2 is #162 or diff[161]
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0., 0.
                 , 0., 0., 0., 0., 0.]
        self.signal = np.array(data, dtype=np.float32 )
        self.smooth = np.array(smoothed,  dtype=np.float32 )
        self.smooth1= np.array(smoothed1, dtype=np.float32 )        
        self.sign = np.array(sign, dtype=np.float32 )
        self.diff = np.array(diff, dtype=np.float32 )        
        self.windowsize = 253
        self.summit = 161       # this is based on 1-deriv smoothed data

    def test_savitzky_golay(self):
        result = savitzky_golay( self.signal, self.windowsize, 2, deriv = 0 )
        self.assertEqual_nparray1d( result, self.smooth )        
        result = savitzky_golay( self.signal, self.windowsize, 2, deriv = 1 )
        self.assertEqual_nparray1d( result, self.smooth1 )

    def test_savitzky_golay_order2(self):
        result = savitzky_golay_order2( self.signal, self.windowsize, deriv = 0 )
        self.assertEqual_nparray1d( result, self.smooth )
        result = savitzky_golay_order2( self.signal, self.windowsize, deriv = 1 )
        self.assertEqual_nparray1d( result, self.smooth1 )

    def test_numpy( self ):
        smoothed = [  6.61562562e-02,  6.61510691e-02,  6.61355078e-02,  6.61095723e-02,
                       7.70654656e-04,  3.85327328e-04, -2.98155597e-18, -3.85327328e-04, # 3.85327328e-04  is the maximum point smoothed1[161]
                      -7.70654656e-04, -1.15598198e-03, -1.44720052e-03, -1.73767805e-03 ]
        sign = [ 1., 1., 1., 1.,
                 1., 1.,-1.,-1.,
                -1.,-1.,-1.,-1. ]
        diff = [ 0., 0., 0., 0.,
                 0.,-2., 0., 0.,
                 0., 0., 0. ]

        np_smoothed= np.array(smoothed, dtype=np.float32 )        
        np_sign = np.array(sign, dtype=np.float32 )
        np_diff = np.array(diff, dtype=np.float32 )       

        sign = np.sign( np_smoothed )
        self.assertEqual_nparray1d( sign, np_sign )
        diff = np.diff( np_sign )
        self.assertEqual_nparray1d( diff, np_diff )
        m = np.where( diff <= -1)[0].astype('int32')
        self.assertEqual( m, 5 )
        
    def test_numpy_2 ( self ):
        sign = np.sign( self.smooth1 )
        self.assertEqual_nparray1d( sign, self.sign )
        diff = np.diff( self.sign )
        self.assertEqual_nparray1d( diff, self.diff )
        m = np.where( self.diff <= -1)[0].astype('int32')
        self.assertEqual( m, 161 )
        
    def test_enforce_valleys(self):
        pass

    def test_enforce_peakyness(self):
        pass
        
    def test_maxima(self):
        expect = self.summit
        result = maxima( self.signal, self.windowsize )[0]
        self.assertEqual( result, expect )

    def assertEqual_nparray1d ( self, a, b, roundn = 4 ):
        self.assertEqual( a.shape[0], b.shape[0] )
        l = a.shape[0]
        for i in range( l ):
            self.assertAlmostEqual( a[i], b[i], places = 4, msg=f"Not equal at {i} {a[i]} {b[i]}" )
            
